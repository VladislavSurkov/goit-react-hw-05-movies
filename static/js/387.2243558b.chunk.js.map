{"version":3,"file":"static/js/387.2243558b.chunk.js","mappings":"iOAEaA,E,QAAmBC,GAAAA,IAAH,sQ,mBC6B7B,EA1BgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,IAAU,WAAtBD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GAASO,KAAKH,EAC/B,GAAE,CAACJ,KAGF,SAACF,EAAD,UACGK,EAAQK,OAAS,GAChB,wBACGL,EAAQM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,EADE,OAQf,qEAIP,C,2NC3BYG,EAAa,mCAEpBC,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,mCACTC,SAAU,QACVC,eAAe,IAEjBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,sGACRD,EAAAA,EAAAA,IAAA,6BAAgCL,IADxB,uBACvBO,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAKjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNL,EAAAA,EAAAA,IAAA,wBACJL,EADI,kBACkBU,IAFZ,uBACrBH,EADqB,EACrBA,KADqB,kBAItBA,EAAKC,SAJiB,2CAAH,sDAMfG,EAAe,mCAAG,WAAMf,GAAN,yFACNS,EAAAA,EAAAA,IAAA,iBAAoBT,EAApB,YAA0BI,IADpB,uBACrBO,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAIfK,EAAY,mCAAG,WAAMhB,GAAN,yFACHS,EAAAA,EAAAA,IAAA,iBAAoBT,EAApB,oBAAkCI,IAD/B,uBAClBO,EADkB,EAClBA,KADkB,kBAEnBA,EAAKM,MAFc,2CAAH,sDAKZrB,EAAe,mCAAG,WAAMI,GAAN,yFACNS,EAAAA,EAAAA,IAAA,iBAAoBT,EAApB,oBAAkCI,IAD5B,uBACrBO,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.div`\n  display: flex;\n  padding: 30px;\n  margin: 20px 30px 30px;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  flex-direction: column;\n  align-items: center;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ReviewsContainer } from './Reviews.styled';\nimport { getMovieReviews } from '../../services/fetchMovies';\n\nconst Reviews = () => {\n  const { movieId } = useParams('movieId');\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <ReviewsContainer>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don`t have any reviews for this movie</p>\n      )}\n    </ReviewsContainer>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nexport const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\nconst searchParams = new URLSearchParams({\n  api_key: '45989748ec1c64593bbaf33eb973edc1',\n  language: 'en-US',\n  include_adult: false,\n});\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/week?${searchParams}`);\n  return data.results;\n};\n\nexport const getMoviesByName = async name => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&query=${name}`\n  );\n  return data.results;\n};\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n};\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data.results;\n};\n"],"names":["ReviewsContainer","styled","movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","then","length","map","id","author","content","imgBaseUrl","searchParams","URLSearchParams","api_key","language","include_adult","axios","getTrendingMovies","data","results","getMoviesByName","name","getMovieDetails","getMovieCast","cast"],"sourceRoot":""}