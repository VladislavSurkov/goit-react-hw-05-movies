{"version":3,"file":"static/js/771.9f6c6081.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Loading = styled.div`\n  position: relative;\n  top: 10vh;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { Loading } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <Loading>\n      <RotatingLines\n        strokeColor=\"#3f51b590\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"150\"\n        visible={true}\n      />\n    </Loading>\n  );\n};\nexport default Loader;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 40px;\n  padding: 0 20px;\n`;\n\nexport const Img = styled.img`\n  border-radius: 4px;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%); ;\n`;\n\nexport const Wrapper = styled.div``;\n\nexport const Title = styled.h2`\n  margin-bottom: 45px;\n  font-weight: 700;\n  font-size: 36px;\n  text-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%); ;\n`;\n\nexport const Year = styled.span`\n  font-weight: 200;\n`;\n\nexport const Description = styled.p`\n  margin-bottom: 15px;\n  font-size: 22px;\n  font-weight: 500;\n`;\n\nexport const Text = styled.span`\n  font-weight: 300;\n  letter-spacing: 0.05em;\n`;\n","import PropTypes from 'prop-types';\nimport { imgBaseUrl } from '../../services/fetchMovies';\nimport {\n  Container,\n  Img,\n  Title,\n  Wrapper,\n  Year,\n  Description,\n  Text,\n} from './MovieCard.styled';\n\nexport const MovieCard = ({ movie }) => {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movie;\n\n  const imgUrl = poster_path\n    ? imgBaseUrl.concat(poster_path)\n    : 'https://d16u9y6cg00afk.cloudfront.net/Ke58811ef482bae9b4724_by_StickerStealRobot/659227.512.webp';\n  const releaseDate = release_date.slice(0, 4);\n  const voteScore = vote_average.toFixed(1);\n  const genresList = genres.map(ganre => console.log(ganre)).join(', ');\n  console.log(genres);\n  return (\n    <Container>\n      <Img src={imgUrl} alt=\"{title}\" width=\"350\" />\n      <Wrapper>\n        <Title>\n          {title} <Year>({releaseDate})</Year>\n        </Title>\n        <Description>\n          User score: <Text>{voteScore}</Text>\n        </Description>\n        <Description>\n          Overview: <Text>{overview}</Text>\n        </Description>\n        <Description>\n          Genres: <Text>{genresList}</Text>\n        </Description>\n      </Wrapper>\n    </Container>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.objectOf(\n    PropTypes.shape({\n      poster_path: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n      vote_average: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n      genres: PropTypes.arrayOf(\n        PropTypes.shape({\n          genre: PropTypes.arrayOf(\n            PropTypes.shape({\n              name: PropTypes.string.isRequired,\n            })\n          ),\n        })\n      ).isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Btn = styled.button`\n  border: none;\n  background-color: blue;\n  color: white;\n  margin: 10px;\n  padding: 10px;\n  border-radius: 30px;\n  cursor: pointer;\n`;\n\nexport const InfoList = styled.ul`\n  text-decoration: none;\n  margin-left: 0;\n  margin-top: 0;\n`;\nexport const Container = styled.div`\n  margin: 20px 0;\n  display: flex;\n  gap: 10px;\n`;\n\nexport const InfoLink = styled(NavLink)`\n  font-weight: 600;\n  text-decoration: none;\n  background-color: blue;\n  padding: 10px;\n  border-radius: 10px;\n  color: #ececf1;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport { getMovieDetails } from '../../services/fetchMovies';\nimport { MovieCard } from '../../components/MovieCard/MovieCard';\nimport { Btn, Container, InfoLink } from './MovieDetails.styled';\nimport Loader from '../../components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n  \n    getMovieDetails(movieId).then(setMovieDetails);\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return null;\n  }\n\n  const backToMovies = () => {\n    navigate(location.state?.from ?? '/movies');\n  };\n  return (\n    <>\n      <Btn type=\"button\" onClick={backToMovies}>\n        Go Back\n      </Btn>\n      <MovieCard movie={movieDetails} />\n      <Container>\n        <InfoLink to={'cast'} state={{ from: location?.state?.from }}>\n          Cast\n        </InfoLink>\n        <InfoLink to={'reviews'} state={{ from: location?.state?.from }}>\n          Reviews\n        </InfoLink>\n      </Container>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nexport const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\nconst searchParams = new URLSearchParams({\n  api_key: '45989748ec1c64593bbaf33eb973edc1',\n  language: 'en-US',\n  include_adult: false,\n});\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/week?${searchParams}`);\n  return data.results;\n};\n\nexport const getMoviesByName = async name => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&query=${name}`\n  );\n  return data.results;\n};\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n};\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data.results;\n};\n"],"names":["Loading","styled","strokeColor","strokeWidth","animationDuration","width","visible","Container","Img","Wrapper","Title","Year","Description","Text","MovieCard","movie","poster_path","title","release_date","vote_average","overview","genres","imgUrl","imgBaseUrl","releaseDate","slice","voteScore","toFixed","genresList","map","ganre","console","log","join","src","alt","Btn","InfoLink","NavLink","useState","movieDetails","setMovieDetails","movieId","useParams","location","useLocation","navigate","useNavigate","useEffect","getMovieDetails","then","type","onClick","state","from","to","Suspense","fallback","Loader","searchParams","URLSearchParams","api_key","language","include_adult","axios","getTrendingMovies","data","results","getMoviesByName","name","id","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}