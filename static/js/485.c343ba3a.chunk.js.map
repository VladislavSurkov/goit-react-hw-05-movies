{"version":3,"file":"static/js/485.c343ba3a.chunk.js","mappings":"2QAGaA,EAAgBC,EAAAA,GAAAA,IAAH,6FAMbC,EAAYD,EAAAA,GAAAA,GAAH,8GAOTE,EAAYF,EAAAA,GAAAA,GAAH,4LAWTG,EAAYH,EAAAA,GAAAA,GAAH,6dAmBTI,GAAYJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,kDAITM,EAAMN,EAAAA,GAAAA,IAAH,+KAUHO,EAAaP,EAAAA,GAAAA,IAAH,4K,SCVvB,EApCa,WACX,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAoBC,KAAKL,EAC1B,GAAE,KAGD,UAACX,EAAD,YACE,SAACE,EAAD,6BACCQ,EAAOO,OAAS,IACf,SAACd,EAAD,UACGO,EAAOQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,YAApB,OACV,SAAClB,EAAD,WACE,UAACC,EAAD,CAAWkB,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMb,GAA/C,WACE,SAACL,EAAD,CACEmB,IACEJ,EACIK,EAAAA,GAAAA,OAAkBL,GAClB,mGAENM,IAAG,OAAER,QAAF,IAAEA,EAAAA,EAASC,KAEhB,SAACb,EAAD,WACE,+BAAKY,QAAL,IAAKA,EAAAA,EAASC,UAXJF,EADN,QAqBrB,C,2NC9CYQ,EAAa,mCAEpBE,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,mCACTC,SAAU,QACVC,eAAe,IAEjBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMnB,EAAiB,mCAAG,sGACRmB,EAAAA,EAAAA,IAAA,6BAAgCL,IADxB,uBACvBM,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAKjBC,EAAe,mCAAG,WAAMhB,GAAN,yFACNa,EAAAA,EAAAA,IAAA,wBACJL,EADI,kBACkBR,IAFZ,uBACrBc,EADqB,EACrBA,KADqB,kBAItBA,EAAKC,SAJiB,2CAAH,sDAMfE,EAAe,mCAAG,WAAMnB,GAAN,yFACNe,EAAAA,EAAAA,IAAA,iBAAoBf,EAApB,YAA0BU,IADpB,uBACrBM,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAIfI,EAAY,mCAAG,WAAMpB,GAAN,yFACHe,EAAAA,EAAAA,IAAA,iBAAoBf,EAApB,oBAAkCU,IAD/B,uBAClBM,EADkB,EAClBA,KADkB,kBAEnBA,EAAKK,MAFc,2CAAH,sDAKZC,EAAe,mCAAG,WAAMtB,GAAN,yFACNe,EAAAA,EAAAA,IAAA,iBAAoBf,EAApB,oBAAkCU,IAD5B,uBACrBM,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qD","sources":["pages/Home/Home.styled.jsx","pages/Home/Home.jsx","services/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const HomeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const HomeTitle = styled.h1`\n  font-weight: 700;\n  color: #3f51b5;\n  margin: 30px, 0;\n  text-decoration: none;\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding: 0;\n`;\n\nexport const MovieItem = styled.li`\n  background: rgb(255, 255, 255);\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  width: 100%;\n  max-width: 200px;\n  margin: 10px;\n  border-radius: 5px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  transition-duration: 300ms;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: rgb(0 0 0 / 8%) 0px 10px 25px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Img = styled.img`\n  padding: 0px;\n  margin: 0px;\n  height: 260px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n`;\n\nexport const MovieTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px;\n  margin: 0px;\n  font-size: 10px;\n  color: #3f51b5;\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getTrendingMovies, imgBaseUrl } from '../../services/fetchMovies';\n\nimport {\n  HomeContainer,\n  HomeTitle,\n  MovieList,\n  MovieItem,\n  MovieLink,\n  Img,\n  MovieTitle,\n} from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    getTrendingMovies().then(setMovies);\n  }, []);\n\n  return (\n    <HomeContainer>\n      <HomeTitle>Tranding today</HomeTitle>\n      {movies.length > 0 && (\n        <MovieList>\n          {movies.map(({ id, title, name, poster_path }) => (\n            <MovieItem key={id}>\n              <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                <Img\n                  src={\n                    poster_path\n                      ? imgBaseUrl.concat(poster_path)\n                      : 'https://d16u9y6cg00afk.cloudfront.net/Ke58811ef482bae9b4724_by_StickerStealRobot/659227.512.webp'\n                  }\n                  alt={title ?? name}\n                />\n                <MovieTitle>\n                  <h3>{title ?? name}</h3>\n                </MovieTitle>\n              </MovieLink>\n            </MovieItem>\n          ))}\n        </MovieList>\n      )}\n    </HomeContainer>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nexport const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\nconst searchParams = new URLSearchParams({\n  api_key: '45989748ec1c64593bbaf33eb973edc1',\n  language: 'en-US',\n  include_adult: false,\n});\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/week?${searchParams}`);\n  return data.results;\n};\n\nexport const getMoviesByName = async name => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&query=${name}`\n  );\n  return data.results;\n};\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n};\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data.results;\n};\n"],"names":["HomeContainer","styled","HomeTitle","MovieList","MovieItem","MovieLink","Link","Img","MovieTitle","useState","movies","setMovies","location","useLocation","useEffect","getTrendingMovies","then","length","map","id","title","name","poster_path","to","state","from","src","imgBaseUrl","alt","searchParams","URLSearchParams","api_key","language","include_adult","axios","data","results","getMoviesByName","getMovieDetails","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}