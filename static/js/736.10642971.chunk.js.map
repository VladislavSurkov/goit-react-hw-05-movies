{"version":3,"file":"static/js/736.10642971.chunk.js","mappings":"iQAEaA,EAAgBC,EAAAA,GAAAA,IAAH,iMAObC,EAAWD,EAAAA,GAAAA,GAAH,2NAYRE,EAAWF,EAAAA,GAAAA,GAAH,qUAaRG,EAAMH,EAAAA,GAAAA,IAAH,+KAUHI,EAAYJ,EAAAA,GAAAA,IAAH,6EAMTK,EAAWL,EAAAA,GAAAA,GAAH,wCAIRM,EAAWN,EAAAA,GAAAA,EAAH,wC,SCJrB,EArCa,WACT,IAAQO,GAAYC,EAAAA,EAAAA,IAAU,WAAtBD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMJ,OAJIC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAaN,GAASO,KAAKH,EAC9B,GAAE,CAACJ,KAGN,SAACR,EAAD,UACGW,EAAQK,OAAS,GAChB,SAACd,EAAD,UACGS,EAAQM,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACtC,OACE,UAAClB,EAAD,YACE,SAACC,EAAD,CACEkB,IACEH,EACII,EAAAA,GAAAA,OAAkBJ,GAClB,mGAENK,IAAKJ,KAEP,UAACf,EAAD,YACE,SAACC,EAAD,UAAWc,KACX,UAACb,EAAD,yBAAsBc,UAXXH,EAelB,OAGH,kEAIL,C,2NC/CYK,EAAa,mCAIpBE,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,mCACTC,SAAU,QACVC,eAAe,IAEjBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,sGACRD,EAAAA,EAAAA,IAAA,6BAAgCL,IADxB,uBACvBO,EADuB,EACvBA,KADuB,kBAEtBA,EAAKC,SAFiB,2CAAH,qDAKjBC,EAAe,mCAAG,WAAMd,GAAN,yFACNU,EAAAA,EAAAA,IAAA,wBAA2BL,EAA3B,kBAAiDL,IAD3C,uBACrBY,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,sDAIfE,EAAe,mCAAG,WAAMjB,GAAN,yFACTY,EAAAA,EAAAA,IAAA,iBAAoBZ,EAApB,YAA0BO,IADjB,uBACvBO,EADuB,EACvBA,KADuB,kBAEtBA,GAFsB,2CAAH,sDAIflB,EAAY,mCAAG,WAAMI,GAAN,yFACHY,EAAAA,EAAAA,IAAA,iBAAoBZ,EAApB,oBAAkCO,IAD/B,uBAClBO,EADkB,EAClBA,KADkB,kBAEnBA,EAAKI,MAFc,2CAAH,sDAKZC,EAAe,mCAAG,WAAMnB,GAAN,yFACNY,EAAAA,EAAAA,IAAA,iBAAoBZ,EAApB,oBAAkCO,IAD5B,uBACrBO,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastContainer = styled.div`\n  padding: 30px;\n  margin: 20px 30px 30px;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding: 0;\n  transition-duration: 300ms;\n`;\n\nexport const CastItem = styled.li`\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  width: 100%;\n  max-width: 200px;\n  margin: 10px;\n  border-radius: 5px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  transition-duration: 300ms;\n`;\n\nexport const Img = styled.img`\n  padding: 0px;\n  margin: 0px;\n  height: 260px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n`;\n\nexport const CastDescr = styled.div`\n  padding: 5px;\n  margin: 0px;\n  font-size: 14px;\n`;\n\nexport const CastName = styled.h3`\n  margin: 0px;\n`;\n\nexport const CastChar = styled.p`\n  margin: 0px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast, imgBaseUrl } from '../../services/fetchMovies';\nimport {\n  CastContainer,\n  CastList,\n  CastItem,\n  Img,\n  CastDescr,\n  CastName,\n  CastChar,\n} from './Cast.styled';\n\nconst Cast = () => {\n    const { movieId } = useParams('movieId');\n    const [credits, setCredits] = useState([]);\n\n    useEffect(() => {\n        getMovieCast(movieId).then(setCredits);\n    }, [movieId]);\n\nreturn (\n  <CastContainer>\n    {credits.length > 0 ? (\n      <CastList>\n        {credits.map(({ id, profile_path, name, character }) => {\n          return (\n            <CastItem key={id}>\n              <Img\n                src={\n                  profile_path\n                    ? imgBaseUrl.concat(profile_path)\n                    : 'https://d16u9y6cg00afk.cloudfront.net/Ke58811ef482bae9b4724_by_StickerStealRobot/659227.512.webp'\n                }\n                alt={name}\n              />\n              <CastDescr>\n                <CastName>{name}</CastName>\n                <CastChar>Character: {character}</CastChar>\n              </CastDescr>\n            </CastItem>\n          );\n        })}\n      </CastList>\n    ) : (\n      <p>We don`t have any cast for this movie</p>\n    )}\n  </CastContainer>\n);\n}\nexport default Cast","import axios from 'axios';\n\nexport const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\n\n\nconst searchParams = new URLSearchParams({\n  api_key: '45989748ec1c64593bbaf33eb973edc1',\n  language: 'en-US',\n  include_adult: false,\n});\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/week?${searchParams}`);\n    return data.results\n}\n\nexport const getMoviesByName = async name => {\n  const { data } = await axios.get(`/search/movie?${searchParams}&query=${name}`)\n  return data.results\n}\nexport const getMovieDetails = async id=> {\n  const{data} = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n}\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data.results;\n};"],"names":["CastContainer","styled","CastList","CastItem","Img","CastDescr","CastName","CastChar","movieId","useParams","useState","credits","setCredits","useEffect","getMovieCast","then","length","map","id","profile_path","name","character","src","imgBaseUrl","alt","searchParams","URLSearchParams","api_key","language","include_adult","axios","getTrendingMovies","data","results","getMoviesByName","getMovieDetails","cast","getMovieReviews"],"sourceRoot":""}