{"version":3,"file":"static/js/691.200e9e04.chunk.js","mappings":"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","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Form = styled.form`\n  margin: 10px 0 20px;\n  max-width: 600px;\n  display: flex;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  border: 0;\n\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  color: #3f51b5;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding: 0;\n`;\n\nexport const MovieItem = styled.li`\n  background: rgb(255, 255, 255);\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  width: 100%;\n  max-width: 200px;\n  margin: 10px;\n  border-radius: 5px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  transition-duration: 300ms;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: rgb(0 0 0 / 8%) 0px 10px 25px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Img = styled.img`\n  padding: 0px;\n  margin: 0px;\n  height: 260px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n`;\n\nexport const MovieTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px;\n  margin: 0px;\n  font-size: 10px;\n  color: #000000;\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { getMoviesByName, imgBaseUrl } from '../../services/fetchMovies';\nimport {\n  Form,\n  Input,\n  Button,\n  MovieList,\n  MovieItem,\n  MovieLink,\n  Img,\n  MovieTitle,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const onQuery = searchParams.get('query') ?? '';\n    if (!onQuery) return;\n\n    getMoviesByName(onQuery).then(setMovies);\n  }, [searchParams]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams(query !== '' ? { query } : {});\n    console.log(movies);\n  };\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" value={query} onChange={handleChange} />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      {movies.length > 0 && (\n        <MovieList>\n          {movies.map(({ id, title, name, poster_path }) => (\n            <MovieItem key={id}>\n              <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                <Img\n                  src={\n                    poster_path\n                      ? imgBaseUrl.concat(poster_path)\n                      : 'https://d16u9y6cg00afk.cloudfront.net/Ke58811ef482bae9b4724_by_StickerStealRobot/659227.512.webp'\n                  }\n                  alt={title ?? name}\n                />\n                <MovieTitle>\n                  <h3>{title ?? name}</h3>\n                </MovieTitle>\n              </MovieLink>\n            </MovieItem>\n          ))}\n        </MovieList>\n      )}\n    </>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\nexport const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\nconst searchParams = new URLSearchParams({\n  api_key: '45989748ec1c64593bbaf33eb973edc1',\n  language: 'en-US',\n  include_adult: false,\n});\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/week?${searchParams}`);\n  return data.results;\n};\n\nexport const getMoviesByName = async name => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&query=${name}`\n  );\n  return data.results;\n};\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n};\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data.results;\n};\n"],"names":["Form","styled","Input","Button","MovieList","MovieItem","MovieLink","Link","Img","MovieTitle","useState","query","setQuery","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","onQuery","get","getMoviesByName","then","onSubmit","e","preventDefault","console","log","type","value","onChange","target","length","map","id","title","name","poster_path","to","state","from","src","imgBaseUrl","alt","URLSearchParams","api_key","language","include_adult","axios","getTrendingMovies","data","results","getMovieDetails","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}